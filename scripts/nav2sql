#!/usr/bin/perl -w

# Convert nav.dat into SQL statements, see fg.sql for database definition

use strict;

my($sql) = "";
my($debug) = undef;

#$debug = 1;

sub dprintf
{
    my($str) = @_;

    if($debug)
    {
        printf(STDERR $str);
    }
}


while(<STDIN>)
{
    my($line) = $_;

    if($line =~ /^$/)
    {
        next;
    }

    chomp($line);
    
    dprintf("[$line]\n");

    my($code);

    ($code) = ($line =~ m/^(\d+) /);

    if(!defined($code))
    {
        next;
    }

    if($code > 99)
    {
        # header, ignore
    }
    elsif($code != 99)
    {
        my($type, $lat, $lng, $elevation, $freq, $range, $multi, $ident, $name)
            = split(/[ \t]+/, $line, 9);

        $name =~ s/'/\\'/g;

        my($type_name) = "";

        ($name, $type_name) = ($name =~ m/^(.*) (.*?)$/);

        my($abslng) = $lng;
        if($abslng < 0)
        {
            $abslng += 360;
        }


        # TACAN:    ID, Channel
        # DME:      ID, Channel

        # VOR:      ID, Freq
        # VOR-DME:  ID, Channel, Freq
        # VORTAC:   ID, Channel, Freq

        # NDB:      ID, Freq
        # NDB-DME:  ID, Channel, Freq

        # Workaround for NDB-DME in nav.dat
        # Note: Some NDB-DME in the nav.dat has a DME part with a different
        # lat/lng, this is ignored here for the moment

        # TODO: Fill ILS with channelfreq? I'm using freq directly atm in
        # fg_nav_xml.cgi

        if(${type} == 13 and ${type_name} eq 'NDB-DME')
        {
            $sql .= <<SQL;
UPDATE fg_nav
    SET channelfreq = ${freq}
    WHERE type_name = '${type_name}' AND ident = '${ident}';
SQL
        }
        else
        {
            my($channelfreq) = "null";

            if(${type_name} eq 'VOR-DME' || ${type_name} eq 'VORTAC')
            {
                $channelfreq = $freq;
            }
            elsif(${type_name} eq 'TACAN' || ${type_name} eq 'DME')
            {
                $channelfreq = $freq;
                $freq = "null";
            }

            $sql .= <<SQL;
INSERT INTO fg_nav
    (nav_type, lat, lng, abslng, elevation, freq, channelfreq, range, multi, ident, name, type_name)
    VALUES
    ($type, $lat, $lng, $abslng, $elevation, $freq, $channelfreq, $range, $multi, '$ident', '$name', '$type_name');
SQL
        }
    }
    else
    {
        # end
    }
}

print($sql);

